apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

//apply plugin: 'ripple-permission-plugin'

repositories {
    flatDir {
        dirs 'lib'
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.fanyafeng.modules"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

//rippleIgnorePermission {
//    ignoreContainPathList = ["com/fanyafeng/modules"]
//}
task testLocalProperties {
    def str = "你好"
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
    properties.load(inputStream)
    def myUser = properties.getProperty("BINTRAY_USER")

    doFirst {
        println("I am in doFirst")
    }

    doLast {
        println("I am in doLast")
        println(USER)
        println(str)
        println(myUser)
    }
}

//rippleIgnorePermission {
//    ignoreContainPathList = ["com/fanyafeng/modules"]
//}

//        ./gradlew :app:dependencies --configuration implementation
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':ripple_dialog')
    implementation project(path: ':ripple_tool')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha02'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.facebook.fresco:fresco:2.2.0'

    implementation project(path: ':ripple_ui')
    implementation project(path: ':ripple_permission')
    implementation project(path: ':ripple_media_picker')
    implementation project(path: ':ripple_task')

//    projectMaven 'ripple_ui|com.ripple.component:ui:1.1.2'
}



interface MyDepend extends DependencyHandler{
    Dependency getProjectMaven()
}

class GreetingPluginExtension {
    String message = "Hello from GreetingPlugin "
}

class GreetingPlugin implements Plugin<Project> {

    @Override
    void apply(Project target) {
        /**
         * name为自定义DSL的名字
         */
        def extension = target.extensions.create('greeting', GreetingPluginExtension)

        /**
         * name为task的名字
         * 出现的位置：
         * 当前项目->app->Tasks->other->name
         */
        target.task('hello') {
            doLast {
                println(extension.message)
            }
        }
    }
}

task testDependencies {
    doFirst {
        //根目录的名字：project.rootProject
        //获取module：project.rootProject.findProject('module_name')
        def itemModuleProject = project.rootProject.findProject("app")
        if (itemModuleProject != null) {
            println("获取的module名字：" + itemModuleProject.name)
            def buildGradle = itemModuleProject.buildFile
            println("gradle名字：" + buildGradle.path)
            itemModuleProject.buildscript.getSourceFile().eachLine {
                if (it.contains("apply plugin: 'kotlin-android'")) {
                    println("引用了kotlin android插件")
                }
            }

        } else {
            println("查找module失败")
        }
//        def setting = project.rootProject.buildFile
//        println(setting.toString())
    }

    doLast {

    }
}
